# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    uploads_base_url: 'https://%env(STATIC_URL)%'
    DATABASE_NAME: '%env(DATABASE_NAME)%'
    DATABASE_USER: '%env(DATABASE_USER)%'
    DATABASE_PASS: '%env(DATABASE_PASS)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            $uploadsFilesystem: '@oneup_flysystem.uploads_filesystem_filesystem'
            $uploadedAssetsBaseUrl: '%uploads_base_url%'
            $s3BucketName: '%env(AWS_S3_BUCKET_NAME)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    before_request_listener:
        class: App\EventListener\BeforeRequestListener
        arguments: ["@doctrine.orm.entity_manager"]
        tags:
            - name: kernel.event_listener
              event: kernel.request
              method: onKernelRequest

    Aws\S3\S3Client:
        arguments:
            - version: '2006-03-01'
              region: 'sa-east-1'
              credentials:
                  key: '%env(AWS_S3_ACCESS_ID)%'
                  secret: '%env(AWS_S3_ACCESS_SECRET)%'